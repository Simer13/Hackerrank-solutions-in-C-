<1> Functions in C

Task
Write a function int max_of_four(int a, int b, int c, int d) which reads four arguments and returns the greatest of them.

Note
There is not built in max function in C. Code that will be reused is often put in a separate function, e.g. int max(x, y) that returns the greater of the two values.

Input Format
Input will contain four integers -  , one on each line.

Output Format
Print the greatest of the four integers.
Note: I/O will be automatically handled.

Sample Input
3
4
6
5

Sample Output
6


#include <stdio.h>
int main() {
    int a, b, c, d;
    scanf("%d %d %d %d", &a, &b, &c, &d);
    int ans = max_of_four(a, b, c, d);
    printf("%d", ans);
    return 0;
}


<2> Calculate the Nth term

Task
There is a series, , where the next term is the sum of pervious three terms. Given the first three terms of the series, , , and  respectively, you have to output the nth term of the series using recursion.

Recursive method for calculating nth term is given below.

Input Format
The first line contains a single integer, .
The next line contains 3 space-separated integers, , , and .

Output Format
Print the nth term of the series, .

Sample Input 0
5
1 2 3

Sample Output 0
11
 

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int find_nth_term(int n, int a, int b, int c) {
  
  if(n==1)
   return a;
   else if(n==2)
   return b;
   else if(n==3)
   return c;
   else
    return find_nth_term(n-1,a,b,c)+find_nth_term(n-2,a,b,c)+find_nth_term(n-3,a,b,c);
}
int main() {
    int n, a, b, c;
  
    scanf("%d %d %d %d", &n, &a, &b, &c);
    int ans = find_nth_term(n, a, b, c);
 
    printf("%d", ans); 
    return 0;
}
